<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple LiDAR Simulator - Three.js (Refresh Cycling)</title>
    <style>
        body { margin: 0; overflow: hidden; }
        canvas { display: block; }
        #modeText {
            position: absolute;
            top: 10px;
            left: 50%;
            transform: translateX(-50%);
            background-color: rgba(255, 255, 255, 0.7);
            padding: 10px;
            border-radius: 5px;
            z-index: 10; /* Ensure it's above the canvas */
            font-size: 16px;
            font-family: sans-serif;
            pointer-events: none; /* Prevent text from interfering with clicks if needed */
        }
    </style>
</head>
<body>
    <div id="modeText">Mode: main.js</div>

    <script type="importmap">
        {
            "imports": {
                "three": "https://cdn.jsdelivr.net/npm/three@0.160.0/build/three.module.js",
                "three/addons/": "https://cdn.jsdelivr.net/npm/three@0.160.0/examples/jsm/"
            }
        }
    </script>

    <script>
        const SCRIPT_STORAGE_KEY = 'lidarNextScript';
        const modeTextElement = document.getElementById('modeText');
        const scripts = [ // List of scripts to cycle through
            "main.js",
            "main_v1.js",
            "main_v2.js",
            "main_v3.js",
            "main_v4.js"
        ];

        // --- Script Loading Logic (runs on page load) ---
        // Check if localStorage has a script specified from the previous cycle
        let scriptToLoad = localStorage.getItem(SCRIPT_STORAGE_KEY);

        if (scriptToLoad && scripts.includes(scriptToLoad)) {
            // If a valid script name is found in storage, write the script tag for it
            document.write(`<script type="module" id="mainModuleScript" src="${scriptToLoad}"><\/script>`);
            console.log(`Loading script from localStorage: ${scriptToLoad}`);
            // Update mode text display
            modeTextElement.textContent = `Mode: ${scriptToLoad.replace('.js', '').replace('main', 'Mode ')}`;
            // Clear the storage item so it doesn't affect manual refreshes
            localStorage.removeItem(SCRIPT_STORAGE_KEY);
        } else {
            // Otherwise, load the default script (main.js)
            scriptToLoad = "main.js"; // Ensure scriptToLoad variable is set for the listener
            document.write('<script type="module" id="mainModuleScript" src="main.js"><\/script>');
            console.log('Loading default script: main.js');
            // Update mode text display for the default
            modeTextElement.textContent = `Mode: main.js`;
        }

        // --- Keydown listener to set the *next* script and reload ---
        // Attach listener to 'window' instead of 'document' for better focus handling
        window.addEventListener('keydown', (event) => {
            // Check if the pressed key is 'j'
            if (event.key === 'j') {
                // Prevent default action if 'j' might trigger something else (e.g., browser find)
                event.preventDefault();

                // Find the index of the *currently* loaded script
                const currentScriptIndex = scripts.indexOf(scriptToLoad);
                // Calculate the index of the *next* script, wrapping around using modulo
                const nextScriptIndex = (currentScriptIndex + 1) % scripts.length;
                const nextScript = scripts[nextScriptIndex];

                // Store the *next* script name in localStorage for the reload
                localStorage.setItem(SCRIPT_STORAGE_KEY, nextScript);
                console.log(`Setting next script to ${nextScript} and reloading...`);

                // Reload the page to apply the change
                window.location.reload();
            }
        });
    </script>

    </body>
</html>
